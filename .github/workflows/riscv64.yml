name: Build for RISC-V

on: [workflow_dispatch]
 
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2

    - name: Clone
      run: |
        git clone --recurse-submodules -j$(nproc --all) https://github.com/openvinotoolkit/openvino --depth 1 -b releases/2022/2

    - name: Install dependencies
      run: |
        sudo dpkg --add-architecture riscv64
        sudo sed -i -E 's|^deb ([^ ]+) (.*)$|deb [arch=amd64] \1 \2\ndeb [arch=riscv64] http://ports.ubuntu.com/ubuntu-ports/ \2|' /etc/apt/sources.list
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends \
          libpython3-dev:riscv64 \
          cython3 \
          crossbuild-essential-riscv64

        python3 -m pip install numpy==1.21.5
        python3 -c "import numpy; print(numpy.__version__); print(numpy.__file__)"

        python3 -m pip install -U wheel

    - name: Build OpenVINO
      run: |
        cmake \
          -DCMAKE_TOOLCHAIN_FILE=$(realpath riscv64.toolchain.cmake) \
          -DTHREADING=SEQ \
          -DENABLE_OPENCV=OFF \
          -DENABLE_PYTHON=ON \
          -DENABLE_WHEEL=ON \
          -DENABLE_SAMPLES=OFF \
          -DPYTHON_INCLUDE_DIR=/usr/include/python3.8 \
          -DPYTHON_MODULE_EXTENSION=".so" \
          -DPYTHON_LIBRARY=/usr/lib/riscv64-linux-gnu/libpython3.8.so \
          -S openvino -B openvino_build

        cmake --build openvino_build -j$(nproc --all)
        cmake --install openvino_build --prefix openvino-2022.2-linux-riscv64
        tar -cvzf openvino-2022.2-linux-riscv64.tar.gz openvino-2022.2-linux-riscv64

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: "openvino_riscv64"
        path: "openvino*.tar.gz"
